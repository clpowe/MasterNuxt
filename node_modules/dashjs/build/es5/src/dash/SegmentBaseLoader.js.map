{"version":3,"sources":["../../../../src/dash/SegmentBaseLoader.js"],"names":["SegmentBaseLoader","context","instance","logger","errHandler","boxParser","requestModifier","dashMetrics","settings","mediaPlayerModel","urlLoader","events","eventBus","errors","constants","dashConstants","urlUtils","baseURLController","setup","initialize","create","useFetch","get","streaming","lowLatencyEnabled","setConfig","config","debug","getLogger","checkConfig","hasOwnProperty","Error","loadInitialization","streamId","mediaType","representation","loadingInfo","initRange","baseUrl","resolve","path","info","init","url","undefined","range","start","end","searching","bytesLoaded","bytesToLoad","request","getFragmentRequest","onload","response","findInitRange","trigger","INITIALIZATION_LOADED","onerror","load","success","error","loadSegments","callback","parts","toString","split","parseFloat","onLoaded","isoFile","sidx","hasRange","extraBytes","loadedLength","byteLength","parse","getBox","isComplete","offset","size","lastBox","getLastBox","ref","references","loadMultiSidx","segments","length","reference_type","j","len","ss","se","r","segs","count","tmpCallback","result","concat","sort","a","b","startTime","referenced_size","id","getSegmentsForSidx","reset","abort","refs","timescale","time","earliest_presentation_time","first_offset","segment","duration","i","subsegment_duration","Segment","mediaRange","push","FragmentRequest","setInfo","SEGMENTS_LOADED","DashJSError","SEGMENT_BASE_LOADER_ERROR_CODE","SEGMENT_BASE_LOADER_ERROR_MESSAGE","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"sEA8BA,qC,+CACA,wD,uDACA,kD,yDACA,gE,+DACA,qD,sIAEA,QAASA,kBAAT,EAA6B,CAEzB,GAAMC,SAAU,KAAKA,OAArB,CAEA,GAAIC,gBAAJ,CACIC,aADJ,CAEIC,iBAFJ,CAGIC,gBAHJ,CAIIC,sBAJJ,CAKIC,kBALJ,CAMIC,eANJ,CAOIC,uBAPJ,CAQIC,gBARJ,CASIC,aATJ,CAUIC,eAVJ,CAWIC,aAXJ,CAYIC,gBAZJ,CAaIC,oBAbJ,CAcIC,eAdJ,CAeIC,wBAfJ,CAiBA,QAASC,MAAT,EAAiB,CAChB,CAED,QAASC,WAAT,EAAsB,CAClBT,UAAY,wBAAUT,OAAV,EAAmBmB,MAAnB,CAA0B,CAClChB,WAAYA,UADsB,CAElCG,YAAaA,WAFqB,CAGlCE,iBAAkBA,gBAHgB,CAIlCH,gBAAiBA,eAJiB,CAKlCe,SAAUb,SAAWA,SAASc,GAAT,GAAeC,SAAf,CAAyBC,iBAApC,CAAwD,IALhC,CAMlCnB,UAAWA,SANuB,CAOlCQ,OAAQA,MAP0B,CAQlCG,SAAUA,QARwB,CASlCF,UAAWA,SATuB,CAUlCC,cAAeA,aAVmB,CAA1B,CAAZ,CAYH,CAED,QAASU,UAAT,CAAmBC,MAAnB,CAA2B,CACvB,GAAIA,OAAOT,iBAAX,CAA8B,CAC1BA,kBAAoBS,OAAOT,iBAA3B,CACH,CAED,GAAIS,OAAOnB,WAAX,CAAwB,CACpBA,YAAcmB,OAAOnB,WAArB,CACH,CAED,GAAImB,OAAOjB,gBAAX,CAA6B,CACzBA,iBAAmBiB,OAAOjB,gBAA1B,CACH,CAED,GAAIiB,OAAOtB,UAAX,CAAuB,CACnBA,WAAasB,OAAOtB,UAApB,CACH,CAED,GAAIsB,OAAOlB,QAAX,CAAqB,CACjBA,SAAWkB,OAAOlB,QAAlB,CACH,CAED,GAAIkB,OAAOrB,SAAX,CAAsB,CAClBA,UAAYqB,OAAOrB,SAAnB,CACH,CAED,GAAIqB,OAAOf,MAAX,CAAmB,CACfA,OAASe,OAAOf,MAAhB,CACH,CAED,GAAIe,OAAOd,QAAX,CAAqB,CACjBA,SAAWc,OAAOd,QAAlB,CACH,CAED,GAAIc,OAAOC,KAAX,CAAkB,CACdxB,OAASuB,OAAOC,KAAP,CAAaC,SAAb,CAAuB1B,QAAvB,CAAT,CACH,CAED,GAAIwB,OAAOpB,eAAX,CAA4B,CACxBA,gBAAkBoB,OAAOpB,eAAzB,CACH,CAED,GAAIoB,OAAOb,MAAX,CAAmB,CACfA,OAASa,OAAOb,MAAhB,CACH,CAED,GAAIa,OAAOV,QAAX,CAAqB,CACjBA,SAAWU,OAAOV,QAAlB,CACH,CAED,GAAIU,OAAOZ,SAAX,CAAsB,CAClBA,UAAYY,OAAOZ,SAAnB,CACH,CAED,GAAIY,OAAOX,aAAX,CAA0B,CACtBA,cAAgBW,OAAOX,aAAvB,CACH,CACJ,CAED,QAASc,YAAT,EAAuB,CACnB,GAAI,CAACZ,iBAAD,EAAsB,CAACA,kBAAkBa,cAAlB,CAAiC,SAAjC,CAA3B,CAAwE,CACpE,KAAM,IAAIC,MAAJ,CAAU,gDAAV,CAAN,CACH,CACJ,CAED,QAASC,mBAAT,CAA4BC,QAA5B,CAAsCC,SAAtC,CAAiDC,cAAjD,CAAiEC,WAAjE,CAA8E,CAC1EP,cACA,GAAIQ,WAAY,IAAhB,CACA,GAAMC,SAAUH,eAAiBlB,kBAAkBsB,OAAlB,CAA0BJ,eAAeK,IAAzC,CAAjB,CAAkE,IAAlF,CACA,GAAMC,MAAOL,aAAe,CACxBM,KAAM,IADkB,CAExBC,IAAKL,QAAUA,QAAQK,GAAlB,CAAwBC,SAFL,CAGxBC,MAAO,CACHC,MAAO,CADJ,CAEHC,IAAK,IAFF,CAHiB,CAOxBC,UAAW,KAPa,CAQxBC,YAAa,CARW,CASxBC,YAAa,IATW,CAUxBhB,UAAWA,SAVa,CAA5B,CAaA/B,OAAOwB,KAAP,CAAa,qCAAb,EAEA,GAAMwB,SAAUC,mBAAmBX,IAAnB,CAAhB,CAEA,GAAMY,QAAS,QAATA,OAAS,CAAUC,QAAV,CAAoB,CAC/Bb,KAAKQ,WAAL,CAAmBR,KAAKI,KAAL,CAAWE,GAA9B,CACAV,UAAYhC,UAAUkD,aAAV,CAAwBD,QAAxB,CAAZ,CAEA,GAAIjB,SAAJ,CAAe,CACXF,eAAeU,KAAf,CAAuBR,SAAvB,CACA;AACA;AACAzB,SAAS4C,OAAT,CAAiB7C,OAAO8C,qBAAxB,CACI,CAAEtB,eAAgBA,cAAlB,CADJ,CAEI,CAAEF,SAAUA,QAAZ,CAAsBC,UAAWA,SAAjC,CAFJ,EAIH,CARD,IAQO,CACHO,KAAKI,KAAL,CAAWE,GAAX,CAAiBN,KAAKQ,WAAL,CAAmBR,KAAKS,WAAzC,CACAlB,mBAAmBC,QAAnB,CAA6BC,SAA7B,CAAwCC,cAAxC,CAAwDM,IAAxD,EACH,CACJ,CAhBD,CAkBA,GAAMiB,SAAU,QAAVA,QAAU,EAAY,CACxB9C,SAAS4C,OAAT,CAAiB7C,OAAO8C,qBAAxB,CACI,CAAEtB,eAAgBA,cAAlB,CADJ,CAEI,CAAEF,SAAUA,QAAZ,CAAsBC,UAAWA,SAAjC,CAFJ,EAIH,CALD,CAOAxB,UAAUiD,IAAV,CAAe,CAACR,QAASA,OAAV,CAAmBS,QAASP,MAA5B,CAAoCQ,MAAOH,OAA3C,CAAf,EAEAvD,OAAOwB,KAAP,CAAa,wBAA0Bc,KAAKE,GAA5C,EACH,CAED,QAASmB,aAAT,CAAsB7B,QAAtB,CAAgCC,SAAhC,CAA2CC,cAA3C,CAA2DU,KAA3D,CAAkEkB,QAAlE,CAA4E3B,WAA5E,CAAyF,CACrFP,cACA,GAAIgB,QAAUA,MAAMC,KAAN,GAAgBF,SAAhB,EAA6BC,MAAME,GAAN,GAAcH,SAArD,CAAJ,CAAqE,CACjE,GAAMoB,OAAQnB,MAAQA,MAAMoB,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,CAAR,CAAsC,IAApD,CACArB,MAAQmB,MAAQ,CAAClB,MAAOqB,WAAWH,MAAM,CAAN,CAAX,CAAR,CAA8BjB,IAAKoB,WAAWH,MAAM,CAAN,CAAX,CAAnC,CAAR,CAAmE,IAA3E,CACH,CAEDD,SAAW,CAACA,QAAD,CAAYK,QAAZ,CAAuBL,QAAlC,CACA,GAAIM,SAAU,IAAd,CACA,GAAIC,MAAO,IAAX,CACA,GAAMC,UAAW,CAAC,CAAC1B,KAAnB,CACA,GAAMP,SAAUH,eAAiBlB,kBAAkBsB,OAAlB,CAA0BJ,eAAeK,IAAzC,CAAjB,CAAkE,IAAlF,CACA,GAAMC,MAAO,CACTC,KAAM,KADG,CAETC,IAAKL,QAAUA,QAAQK,GAAlB,CAAwBC,SAFpB,CAGTC,MAAO0B,SAAW1B,KAAX,CAAmB,CAAEC,MAAO,CAAT,CAAYC,IAAK,IAAjB,CAHjB,CAITC,UAAW,CAACuB,QAJH,CAKTtB,YAAab,YAAcA,YAAYa,WAA1B,CAAwC,CAL5C,CAMTC,YAAa,IANJ,CAOThB,UAAWA,SAPF,CAAb,CAUA,GAAMiB,SAAUC,mBAAmBX,IAAnB,CAAhB,CAEA,GAAMY,QAAS,QAATA,OAAS,CAAUC,QAAV,CAAoB,CAC/B,GAAMkB,YAAa/B,KAAKS,WAAxB,CACA,GAAMuB,cAAenB,SAASoB,UAA9B,CAEAjC,KAAKQ,WAAL,CAAmBR,KAAKI,KAAL,CAAWE,GAAX,CAAiBN,KAAKI,KAAL,CAAWC,KAA/C,CACAuB,QAAUhE,UAAUsE,KAAV,CAAgBrB,QAAhB,CAAV,CACAgB,KAAOD,QAAQO,MAAR,CAAe,MAAf,CAAP,CAEA,GAAI,CAACN,IAAD,EAAS,CAACA,KAAKO,UAAnB,CAA+B,CAC3B,GAAIP,IAAJ,CAAU,CACN7B,KAAKI,KAAL,CAAWC,KAAX,CAAmBwB,KAAKQ,MAAL,EAAerC,KAAKI,KAAL,CAAWC,KAA7C,CACAL,KAAKI,KAAL,CAAWE,GAAX,CAAiBN,KAAKI,KAAL,CAAWC,KAAX,EAAoBwB,KAAKS,IAAL,EAAaP,UAAjC,CAAjB,CACH,CAHD,IAGO,IAAIC,aAAehC,KAAKQ,WAAxB,CAAqC,CACxC;AACAc,SAAS9B,QAAT,CAAmBC,SAAnB,CAA8B,IAA9B,CAAoCC,cAApC,EACA,OACH,CAJM,IAIA,CACH,GAAM6C,SAAUX,QAAQY,UAAR,EAAhB,CAEA,GAAID,SAAWA,QAAQD,IAAvB,CAA6B,CACzBtC,KAAKI,KAAL,CAAWC,KAAX,CAAmBkC,QAAQF,MAAR,CAAiBE,QAAQD,IAA5C,CACAtC,KAAKI,KAAL,CAAWE,GAAX,CAAiBN,KAAKI,KAAL,CAAWC,KAAX,CAAmB0B,UAApC,CACH,CAHD,IAGO,CACH/B,KAAKI,KAAL,CAAWE,GAAX,EAAkByB,UAAlB,CACH,CACJ,CACDV,aAAa7B,QAAb,CAAuBC,SAAvB,CAAkCC,cAAlC,CAAkDM,KAAKI,KAAvD,CAA8DkB,QAA9D,CAAwEtB,IAAxE,EACH,CAnBD,IAmBO,CACH,GAAMyC,KAAMZ,KAAKa,UAAjB,CACA,GAAIC,qBAAJ,CACIC,eADJ,CAGA,GAAIH,MAAQ,IAAR,EAAgBA,MAAQtC,SAAxB,EAAqCsC,IAAII,MAAJ,CAAa,CAAtD,CAAyD,CACrDF,cAAiBF,IAAI,CAAJ,EAAOK,cAAP,GAA0B,CAA3C,CACH,CAED,GAAIH,aAAJ,CAAmB,CACfjF,OAAOwB,KAAP,CAAa,8BAAb,EACAc,KAAKI,KAAL,CAAWE,GAAX,CAAiBN,KAAKI,KAAL,CAAWC,KAAX,CAAmBwB,KAAKS,IAAzC,CAEA,GAAIS,SAAJ,CAAOC,UAAP,CAAYC,SAAZ,CAAgBC,SAAhB,CAAoBC,QAApB,CACA,GAAIC,MAAO,EAAX,CACA,GAAIC,OAAQ,CAAZ,CACA,GAAIhB,QAAS,CAACR,KAAKQ,MAAL,EAAerC,KAAKI,KAAL,CAAWC,KAA3B,EAAoCwB,KAAKS,IAAtD,CACA,GAAMgB,aAAc,QAAdA,YAAc,CAAU9D,QAAV,CAAoBC,SAApB,CAA+B8D,MAA/B,CAAuC,CACvD,GAAIA,MAAJ,CAAY,CACRH,KAAOA,KAAKI,MAAL,CAAYD,MAAZ,CAAP,CACAF,QAEA,GAAIA,OAASL,GAAb,CAAkB,CACd;AACAI,KAAKK,IAAL,CAAU,SAAUC,CAAV,CAAaC,CAAb,CAAgB,CACtB,MAAOD,GAAEE,SAAF,CAAcD,EAAEC,SAAhB,CAA4B,CAA5B,CAAgC,CAAC,CAAjC,CAAqC,CAA5C,CACH,CAFD,EAGAtC,SAAS9B,QAAT,CAAmBC,SAAnB,CAA8B2D,IAA9B,CAAoC1D,cAApC,EACH,CACJ,CAXD,IAWO,CACH4B,SAAS9B,QAAT,CAAmBC,SAAnB,CAA8B,IAA9B,CAAoCC,cAApC,EACH,CACJ,CAfD,CAiBA,IAAKqD,EAAI,CAAJ,CAAOC,IAAMP,IAAII,MAAtB,CAA8BE,EAAIC,GAAlC,CAAuCD,GAAvC,CAA4C,CACxCE,GAAKZ,MAAL,CACAa,GAAKb,OAASI,IAAIM,CAAJ,EAAOc,eAAhB,CAAkC,CAAvC,CACAxB,OAASA,OAASI,IAAIM,CAAJ,EAAOc,eAAzB,CACAV,EAAI,CAAC9C,MAAO4C,EAAR,CAAY3C,IAAK4C,EAAjB,CAAJ,CACA7B,aAAa7B,QAAb,CAAuBC,SAAvB,CAAkCC,cAAlC,CAAkDyD,CAAlD,CAAqDG,WAArD,CAAkEtD,IAAlE,EACH,CAEJ,CAjCD,IAiCO,CACHtC,OAAOwB,KAAP,CAAa,8CAAgDO,SAAhD,CAA4D,SAA5D,CAAwEC,eAAeoE,EAAvF,CAA4F,eAA5F,CAA8G9D,KAAKI,KAAL,CAAWC,KAAzH,CAAiI,KAAjI,CAAyIL,KAAKI,KAAL,CAAWE,GAAjK,EACAsC,SAAWmB,mBAAmBlC,IAAnB,CAAyB7B,IAAzB,CAAX,CACAsB,SAAS9B,QAAT,CAAmBC,SAAnB,CAA8BmD,QAA9B,CAAwClD,cAAxC,EACH,CACJ,CACJ,CA3ED,CA6EA,GAAMuB,SAAU,QAAVA,QAAU,EAAY,CACxBK,SAAS9B,QAAT,CAAmBC,SAAnB,CAA8B,IAA9B,CAAoCC,cAApC,EACH,CAFD,CAIAzB,UAAUiD,IAAV,CAAe,CAACR,QAASA,OAAV,CAAmBS,QAASP,MAA5B,CAAoCQ,MAAOH,OAA3C,CAAf,EACAvD,OAAOwB,KAAP,CAAa,sBAAwBc,KAAKE,GAA7B,CAAmC,gBAAnC,CAAsDF,KAAKI,KAAL,CAAWC,KAAjE,CAAyE,KAAzE,CAAiFL,KAAKI,KAAL,CAAWE,GAAzG,EACH,CAED,QAAS0D,MAAT,EAAiB,CACb/F,UAAUgG,KAAV,GACAhG,UAAY,IAAZ,CACAN,WAAa,IAAb,CACAC,UAAY,IAAZ,CACAC,gBAAkB,IAAlB,CACH,CAED,QAASkG,mBAAT,CAA4BlC,IAA5B,CAAkC7B,IAAlC,CAAwC,CACpC,GAAMkE,MAAOrC,KAAKa,UAAlB,CACA,GAAMM,KAAMkB,KAAKrB,MAAjB,CACA,GAAMsB,WAAYtC,KAAKsC,SAAvB,CACA,GAAIC,MAAOvC,KAAKwC,0BAAhB,CACA,GAAIhE,OAAQL,KAAKI,KAAL,CAAWC,KAAX,CAAmBwB,KAAKQ,MAAxB,CAAiCR,KAAKyC,YAAtC,CAAqDzC,KAAKS,IAAtE,CACA,GAAMM,UAAW,EAAjB,CACA,GAAI2B,eAAJ,CACIjE,UADJ,CAEIkE,eAFJ,CAGIlC,WAHJ,CAKA,IAAK,GAAImC,GAAI,CAAb,CAAgBA,EAAIzB,GAApB,CAAyByB,GAAzB,CAA8B,CAC1BD,SAAWN,KAAKO,CAAL,EAAQC,mBAAnB,CACApC,KAAO4B,KAAKO,CAAL,EAAQZ,eAAf,CAEAU,QAAU,GAAII,kBAAJ,EAAV,CACA;AACA;AACAJ,QAAQC,QAAR,CAAmBA,QAAnB,CACAD,QAAQX,SAAR,CAAoBQ,IAApB,CACAG,QAAQJ,SAAR,CAAoBA,SAApB,CACA7D,IAAMD,MAAQiC,IAAR,CAAe,CAArB,CACAiC,QAAQK,UAAR,CAAqBvE,MAAQ,GAAR,CAAcC,GAAnC,CACAsC,SAASiC,IAAT,CAAcN,OAAd,EACAH,MAAQI,QAAR,CACAnE,OAASiC,IAAT,CACH,CAED,MAAOM,SAAP,CACH,CAED,QAASjC,mBAAT,CAA4BX,IAA5B,CAAkC,CAC9B,GAAI,CAACA,KAAKE,GAAV,CAAe,CACX,OACH,CACD,GAAMQ,SAAU,GAAIoE,0BAAJ,EAAhB,CACApE,QAAQqE,OAAR,CAAgB/E,IAAhB,EACA,MAAOU,QAAP,CACH,CAED,QAASiB,SAAT,CAAkBnC,QAAlB,CAA4BC,SAA5B,CAAuCmD,QAAvC,CAAiDlD,cAAjD,CAAiE,CAC7DvB,SAAS4C,OAAT,CAAiB7C,OAAO8G,eAAxB,CACI,CACIpC,SAAUA,QADd,CAEIlD,eAAgBA,cAFpB,CAGI0B,MAAOwB,SAAWzC,SAAX,CAAuB,GAAI8E,sBAAJ,CAAgB7G,OAAO8G,8BAAvB,CAAuD9G,OAAO+G,iCAA9D,CAHlC,CADJ,CAMI,CAAE3F,SAAUA,QAAZ,CAAsBC,UAAWA,SAAjC,CANJ,EAQH,CAEDhC,SAAW,CACPuB,UAAWA,SADJ,CAEPN,WAAYA,UAFL,CAGPa,mBAAoBA,kBAHb,CAIP8B,aAAcA,YAJP,CAKP2C,MAAOA,KALA,CAAX,CAQAvF,QAEA,MAAOhB,SAAP,CACH,CAlXD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoXAF,kBAAkB6H,qBAAlB,CAA0C,mBAA1C,C,gBACeC,uBAAaC,mBAAb,CAAiC/H,iBAAjC,C","file":"SegmentBaseLoader.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Segment from './vo/Segment';\nimport DashJSError from '../streaming/vo/DashJSError';\nimport FactoryMaker from '../core/FactoryMaker';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport URLLoader from '../streaming/net/URLLoader';\n\nfunction SegmentBaseLoader() {\n\n    const context = this.context;\n\n    let instance,\n        logger,\n        errHandler,\n        boxParser,\n        requestModifier,\n        dashMetrics,\n        settings,\n        mediaPlayerModel,\n        urlLoader,\n        events,\n        eventBus,\n        errors,\n        constants,\n        dashConstants,\n        urlUtils,\n        baseURLController;\n\n    function setup() {\n    }\n\n    function initialize() {\n        urlLoader = URLLoader(context).create({\n            errHandler: errHandler,\n            dashMetrics: dashMetrics,\n            mediaPlayerModel: mediaPlayerModel,\n            requestModifier: requestModifier,\n            useFetch: settings ? settings.get().streaming.lowLatencyEnabled : null,\n            boxParser: boxParser,\n            errors: errors,\n            urlUtils: urlUtils,\n            constants: constants,\n            dashConstants: dashConstants\n        });\n    }\n\n    function setConfig(config) {\n        if (config.baseURLController) {\n            baseURLController = config.baseURLController;\n        }\n\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n\n        if (config.settings) {\n            settings = config.settings;\n        }\n\n        if (config.boxParser) {\n            boxParser = config.boxParser;\n        }\n\n        if (config.events) {\n            events = config.events;\n        }\n\n        if (config.eventBus) {\n            eventBus = config.eventBus;\n        }\n\n        if (config.debug) {\n            logger = config.debug.getLogger(instance);\n        }\n\n        if (config.requestModifier) {\n            requestModifier = config.requestModifier;\n        }\n\n        if (config.errors) {\n            errors = config.errors;\n        }\n\n        if (config.urlUtils) {\n            urlUtils = config.urlUtils;\n        }\n\n        if (config.constants) {\n            constants = config.constants;\n        }\n\n        if (config.dashConstants) {\n            dashConstants = config.dashConstants;\n        }\n    }\n\n    function checkConfig() {\n        if (!baseURLController || !baseURLController.hasOwnProperty('resolve')) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function loadInitialization(streamId, mediaType, representation, loadingInfo) {\n        checkConfig();\n        let initRange = null;\n        const baseUrl = representation ? baseURLController.resolve(representation.path) : null;\n        const info = loadingInfo || {\n            init: true,\n            url: baseUrl ? baseUrl.url : undefined,\n            range: {\n                start: 0,\n                end: 1500\n            },\n            searching: false,\n            bytesLoaded: 0,\n            bytesToLoad: 1500,\n            mediaType: mediaType\n        };\n\n        logger.debug('Start searching for initialization.');\n\n        const request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            info.bytesLoaded = info.range.end;\n            initRange = boxParser.findInitRange(response);\n\n            if (initRange) {\n                representation.range = initRange;\n                // note that we don't explicitly set rep.initialization as this\n                // will be computed when all BaseURLs are resolved later\n                eventBus.trigger(events.INITIALIZATION_LOADED,\n                    { representation: representation },\n                    { streamId: streamId, mediaType: mediaType }\n                );\n            } else {\n                info.range.end = info.bytesLoaded + info.bytesToLoad;\n                loadInitialization(streamId, mediaType, representation, info);\n            }\n        };\n\n        const onerror = function () {\n            eventBus.trigger(events.INITIALIZATION_LOADED,\n                { representation: representation },\n                { streamId: streamId, mediaType: mediaType }\n            );\n        };\n\n        urlLoader.load({request: request, success: onload, error: onerror});\n\n        logger.debug('Perform init search: ' + info.url);\n    }\n\n    function loadSegments(streamId, mediaType, representation, range, callback, loadingInfo) {\n        checkConfig();\n        if (range && (range.start === undefined || range.end === undefined)) {\n            const parts = range ? range.toString().split('-') : null;\n            range = parts ? {start: parseFloat(parts[0]), end: parseFloat(parts[1])} : null;\n        }\n\n        callback = !callback ? onLoaded : callback;\n        let isoFile = null;\n        let sidx = null;\n        const hasRange = !!range;\n        const baseUrl = representation ? baseURLController.resolve(representation.path) : null;\n        const info = {\n            init: false,\n            url: baseUrl ? baseUrl.url : undefined,\n            range: hasRange ? range : { start: 0, end: 1500 },\n            searching: !hasRange,\n            bytesLoaded: loadingInfo ? loadingInfo.bytesLoaded : 0,\n            bytesToLoad: 1500,\n            mediaType: mediaType\n        };\n\n        const request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            const extraBytes = info.bytesToLoad;\n            const loadedLength = response.byteLength;\n\n            info.bytesLoaded = info.range.end - info.range.start;\n            isoFile = boxParser.parse(response);\n            sidx = isoFile.getBox('sidx');\n\n            if (!sidx || !sidx.isComplete) {\n                if (sidx) {\n                    info.range.start = sidx.offset || info.range.start;\n                    info.range.end = info.range.start + (sidx.size || extraBytes);\n                } else if (loadedLength < info.bytesLoaded) {\n                    // if we have reached a search limit or if we have reached the end of the file we have to stop trying to find sidx\n                    callback(streamId, mediaType, null, representation);\n                    return;\n                } else {\n                    const lastBox = isoFile.getLastBox();\n\n                    if (lastBox && lastBox.size) {\n                        info.range.start = lastBox.offset + lastBox.size;\n                        info.range.end = info.range.start + extraBytes;\n                    } else {\n                        info.range.end += extraBytes;\n                    }\n                }\n                loadSegments(streamId, mediaType, representation, info.range, callback, info);\n            } else {\n                const ref = sidx.references;\n                let loadMultiSidx,\n                    segments;\n\n                if (ref !== null && ref !== undefined && ref.length > 0) {\n                    loadMultiSidx = (ref[0].reference_type === 1);\n                }\n\n                if (loadMultiSidx) {\n                    logger.debug('Initiate multiple SIDX load.');\n                    info.range.end = info.range.start + sidx.size;\n\n                    let j, len, ss, se, r;\n                    let segs = [];\n                    let count = 0;\n                    let offset = (sidx.offset || info.range.start) + sidx.size;\n                    const tmpCallback = function (streamId, mediaType, result) {\n                        if (result) {\n                            segs = segs.concat(result);\n                            count++;\n\n                            if (count >= len) {\n                                // http requests can be processed in a wrong order, so, we have to reorder segments with an ascending start Time order\n                                segs.sort(function (a, b) {\n                                    return a.startTime - b.startTime < 0 ? -1 : 0;\n                                });\n                                callback(streamId, mediaType, segs, representation);\n                            }\n                        } else {\n                            callback(streamId, mediaType, null, representation);\n                        }\n                    };\n\n                    for (j = 0, len = ref.length; j < len; j++) {\n                        ss = offset;\n                        se = offset + ref[j].referenced_size - 1;\n                        offset = offset + ref[j].referenced_size;\n                        r = {start: ss, end: se};\n                        loadSegments(streamId, mediaType, representation, r, tmpCallback, info);\n                    }\n\n                } else {\n                    logger.debug('Parsing segments from SIDX. representation ' + mediaType + ' - id: ' + representation.id + ' for range : ' + info.range.start + ' - ' + info.range.end);\n                    segments = getSegmentsForSidx(sidx, info);\n                    callback(streamId, mediaType, segments, representation);\n                }\n            }\n        };\n\n        const onerror = function () {\n            callback(streamId, mediaType, null, representation);\n        };\n\n        urlLoader.load({request: request, success: onload, error: onerror});\n        logger.debug('Perform SIDX load: ' + info.url + ' with range : ' + info.range.start + ' - ' + info.range.end);\n    }\n\n    function reset() {\n        urlLoader.abort();\n        urlLoader = null;\n        errHandler = null;\n        boxParser = null;\n        requestModifier = null;\n    }\n\n    function getSegmentsForSidx(sidx, info) {\n        const refs = sidx.references;\n        const len = refs.length;\n        const timescale = sidx.timescale;\n        let time = sidx.earliest_presentation_time;\n        let start = info.range.start + sidx.offset + sidx.first_offset + sidx.size;\n        const segments = [];\n        let segment,\n            end,\n            duration,\n            size;\n\n        for (let i = 0; i < len; i++) {\n            duration = refs[i].subsegment_duration;\n            size = refs[i].referenced_size;\n\n            segment = new Segment();\n            // note that we don't explicitly set segment.media as this will be\n            // computed when all BaseURLs are resolved later\n            segment.duration = duration;\n            segment.startTime = time;\n            segment.timescale = timescale;\n            end = start + size - 1;\n            segment.mediaRange = start + '-' + end;\n            segments.push(segment);\n            time += duration;\n            start += size;\n        }\n\n        return segments;\n    }\n\n    function getFragmentRequest(info) {\n        if (!info.url) {\n            return;\n        }\n        const request = new FragmentRequest();\n        request.setInfo(info);\n        return request;\n    }\n\n    function onLoaded(streamId, mediaType, segments, representation) {\n        eventBus.trigger(events.SEGMENTS_LOADED,\n            {\n                segments: segments,\n                representation: representation,\n                error: segments ? undefined : new DashJSError(errors.SEGMENT_BASE_LOADER_ERROR_CODE, errors.SEGMENT_BASE_LOADER_ERROR_MESSAGE)\n            },\n            { streamId: streamId, mediaType: mediaType }\n        );\n    }\n\n    instance = {\n        setConfig: setConfig,\n        initialize: initialize,\n        loadInitialization: loadInitialization,\n        loadSegments: loadSegments,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nSegmentBaseLoader.__dashjs_factory_name = 'SegmentBaseLoader';\nexport default FactoryMaker.getSingletonFactory(SegmentBaseLoader);\n"]}