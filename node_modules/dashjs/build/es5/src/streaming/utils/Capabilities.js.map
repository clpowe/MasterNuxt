{"version":3,"sources":["../../../../../src/streaming/utils/Capabilities.js"],"names":["supportsMediaSource","codecCompatibilityTable","hasWebKit","window","hasMediaSource","Capabilities","instance","encryptedMediaSupported","setup","supportsEncryptedMedia","setEncryptedMediaSupported","value","supportsCodec","codec","MediaSource","isTypeSupported","WebKitMediaSource","supportsEssentialProperty","ep","THUMBNAILS_SCHEME_ID_URIS","indexOf","schemeIdUri","e","codecRootCompatibleWithCodec","codec1","codec2","codecRoot","split","rootCompatible","compatTableCodec","i","length","compatibleCodecs","some","compatibleCodec","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"8EA4CgBA,mB,CAAAA,mB,CAdhB,qD,yDACA,6D,mFA/BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiCA,GAAMC,yBAA0B,CAC5B,CACI,QAAS,MADb,CAEI,mBAAoB,CAAC,MAAD,CAFxB,CAD4B,CAK5B,CACI,QAAS,MADb,CAEI,mBAAoB,CAAC,MAAD,CAFxB,CAL4B,CAAhC,CAWO,QAASD,oBAAT,EAA+B,CAClC,GAAIE,WAAa,qBAAuBC,OAAxC,CACA,GAAIC,gBAAkB,eAAiBD,OAAvC,CAEA,MAAQD,YAAaE,cAArB,CACH,CAED,QAASC,aAAT,EAAwB,CAEpB,GAAIC,gBAAJ,CACIC,8BADJ,CAGA,QAASC,MAAT,EAAiB,CACbD,wBAA0B,KAA1B,CACH,CAED;;;;;OAMA,QAASE,uBAAT,EAAkC,CAC9B,MAAOF,wBAAP,CACH,CAED;;;OAIA,QAASG,2BAAT,CAAoCC,KAApC,CAA2C,CACvCJ,wBAA0BI,KAA1B,CACH,CAED;;;;OAKA,QAASC,cAAT,CAAuBC,KAAvB,CAA8B,CAC1B,GAAI,eAAiBV,OAAjB,EAA2BW,YAAYC,eAAZ,CAA4BF,KAA5B,CAA/B,CAAmE,CAC/D,MAAO,KAAP,CACH,CAED,GAAI,qBAAuBV,OAAvB,EAAiCa,kBAAkBD,eAAlB,CAAkCF,KAAlC,CAArC,CAA+E,CAC3E,MAAO,KAAP,CACH,CAED,MAAO,MAAP,CACH,CAED;;;;OAKA,QAASI,0BAAT,CAAmCC,EAAnC,CAAuC,CACnC,GAAI,CACA,MAAOC,4CAA0BC,OAA1B,CAAkCF,GAAGG,WAArC,IAAsD,CAAC,CAA9D,CACH,CAAC,MAAOC,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED;;;;;OAMA,QAASC,6BAAT,CAAsCC,MAAtC,CAA8CC,MAA9C,CAAsD,CAClD,GAAMC,WAAYF,OAAOG,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAlB,CACA,GAAMC,gBAAiBH,OAAOL,OAAP,CAAeM,SAAf,IAA8B,CAArD,CACA,GAAIG,wBAAJ,CACA,IAAK,GAAIC,GAAI,CAAb,CAAgBA,EAAI7B,wBAAwB8B,MAA5C,CAAoDD,GAApD,CAAyD,CACrD,GAAI7B,wBAAwB6B,CAAxB,EAA2BjB,KAA3B,GAAqCa,SAAzC,CAAoD,CAChDG,iBAAmB5B,wBAAwB6B,CAAxB,CAAnB,CACA,MACH,CACJ,CACD,GAAID,gBAAJ,CAAsB,CAClB,MAAOD,iBAAkBC,iBAAiBG,gBAAjB,CAAkCC,IAAlC,CAAuC,SAACC,eAAD,QAAqBT,QAAOL,OAAP,CAAec,eAAf,IAAoC,CAAzD,EAAvC,CAAzB,CACH,CACD,MAAON,eAAP,CACH,CAEDtB,SAAW,CACPN,uCADO,CAEPS,6CAFO,CAGPG,2BAHO,CAIPF,qDAJO,CAKPO,mDALO,CAMPM,yDANO,CAAX,CASAf,QAEA,MAAOF,SAAP,CACH,CAEDD,aAAa8B,qBAAb,CAAqC,cAArC,C,gBACeC,uBAAaC,mBAAb,CAAiChC,YAAjC,C","file":"Capabilities.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport {THUMBNAILS_SCHEME_ID_URIS} from '../thumbnail/ThumbnailTracks';\n\nconst codecCompatibilityTable = [\n    {\n        'codec': 'avc1',\n        'compatibleCodecs': ['avc3']\n    },\n    {\n        'codec': 'avc3',\n        'compatibleCodecs': ['avc1']\n    }\n];\n\nexport function supportsMediaSource() {\n    let hasWebKit = ('WebKitMediaSource' in window);\n    let hasMediaSource = ('MediaSource' in window);\n\n    return (hasWebKit || hasMediaSource);\n}\n\nfunction Capabilities() {\n\n    let instance,\n        encryptedMediaSupported;\n\n    function setup() {\n        encryptedMediaSupported = false;\n    }\n\n    /**\n     * Returns whether Encrypted Media Extensions are supported on this\n     * user agent\n     *\n     * @return {boolean} true if EME is supported, false otherwise\n     */\n    function supportsEncryptedMedia() {\n        return encryptedMediaSupported;\n    }\n\n    /**\n     *\n     * @param {boolean} value\n     */\n    function setEncryptedMediaSupported(value) {\n        encryptedMediaSupported = value;\n    }\n\n    /**\n     * Check if a codec is supported by the MediaSource\n     * @param {string} codec\n     * @return {boolean}\n     */\n    function supportsCodec(codec) {\n        if ('MediaSource' in window && MediaSource.isTypeSupported(codec)) {\n            return true;\n        }\n\n        if ('WebKitMediaSource' in window && WebKitMediaSource.isTypeSupported(codec)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Check if a specific EssentialProperty is supported\n     * @param {object} ep\n     * @return {boolean}\n     */\n    function supportsEssentialProperty(ep) {\n        try {\n            return THUMBNAILS_SCHEME_ID_URIS.indexOf(ep.schemeIdUri) !== -1;\n        } catch (e) {\n            return true;\n        }\n    }\n\n    /**\n     * Check if the root of the old codec is the same as the new one, or if it's declared as compatible in the compat table\n     * @param {string} codec1\n     * @param {string} codec2\n     * @return {boolean}\n     */\n    function codecRootCompatibleWithCodec(codec1, codec2) {\n        const codecRoot = codec1.split('.')[0];\n        const rootCompatible = codec2.indexOf(codecRoot) === 0;\n        let compatTableCodec;\n        for (let i = 0; i < codecCompatibilityTable.length; i++) {\n            if (codecCompatibilityTable[i].codec === codecRoot) {\n                compatTableCodec = codecCompatibilityTable[i];\n                break;\n            }\n        }\n        if (compatTableCodec) {\n            return rootCompatible || compatTableCodec.compatibleCodecs.some((compatibleCodec) => codec2.indexOf(compatibleCodec) === 0);\n        }\n        return rootCompatible;\n    }\n\n    instance = {\n        supportsMediaSource,\n        supportsEncryptedMedia,\n        supportsCodec,\n        setEncryptedMediaSupported,\n        supportsEssentialProperty,\n        codecRootCompatibleWithCodec\n    };\n\n    setup();\n\n    return instance;\n}\n\nCapabilities.__dashjs_factory_name = 'Capabilities';\nexport default FactoryMaker.getSingletonFactory(Capabilities);\n"]}