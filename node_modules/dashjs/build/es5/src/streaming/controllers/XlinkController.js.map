{"version":3,"sources":["../../../../../src/streaming/controllers/XlinkController.js"],"names":["RESOLVE_TYPE_ONLOAD","RESOLVE_TYPE_ONACTUATE","RESOLVE_TO_ZERO","XlinkController","config","context","eventBus","getInstance","urlUtils","instance","matchers","iron","manifest","converter","xlinkLoader","setup","on","Events","XLINK_ELEMENT_LOADED","onXlinkElementLoaded","create","errHandler","dashMetrics","mediaPlayerModel","requestModifier","settings","setMatchers","value","setIron","resolveManifestOnLoad","mpd","elements","X2JS","escapeMode","attributePrefix","arrayAccessForm","emptyNodeForm","stripWhitespaces","enableToStringFunc","ignoreRoot","Period_asArray","getElementsToResolve","DashConstants","PERIOD","resolve","trigger","XLINK_READY","reset","off","type","resolveType","resolveObject","element","url","length","onXlinkAllElementsLoaded","i","isHTTPURL","originalContent","BaseURL","load","event","openingTag","closingTag","mergedContent","resolvedContent","index","indexOf","substr","xml_str2json","isResolvingFinished","obj","mergeElementsBack","hasOwnProperty","ADAPTATION_SET","concat","EVENT_STREAM","parentElement","toResolve","xlinkObject","splice","createXlinkObject","push","resolvedElements","j","k","isInappropriateTarget","run","resolved","elementsToResolve","__dashjs_factory_name","FactoryMaker","getClassFactory"],"mappings":"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","file":"XlinkController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport XlinkLoader from '../XlinkLoader';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport X2JS from '../../../externals/xml2json';\nimport URLUtils from '../utils/URLUtils';\nimport DashConstants from '../../dash/constants/DashConstants';\n\nconst RESOLVE_TYPE_ONLOAD = 'onLoad';\nconst RESOLVE_TYPE_ONACTUATE = 'onActuate';\nconst RESOLVE_TO_ZERO = 'urn:mpeg:dash:resolve-to-zero:2013';\n\nfunction XlinkController(config) {\n\n    config = config || {};\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        matchers,\n        iron,\n        manifest,\n        converter,\n        xlinkLoader;\n\n    function setup() {\n        eventBus.on(Events.XLINK_ELEMENT_LOADED, onXlinkElementLoaded, instance);\n\n        xlinkLoader = XlinkLoader(context).create({\n            errHandler: config.errHandler,\n            dashMetrics: config.dashMetrics,\n            mediaPlayerModel: config.mediaPlayerModel,\n            requestModifier: config.requestModifier,\n            settings: config.settings\n        });\n    }\n\n    function setMatchers(value) {\n        if (value) {\n            matchers = value;\n        }\n    }\n\n    function setIron(value) {\n        if (value) {\n            iron = value;\n        }\n    }\n\n    /**\n     * <p>Triggers the resolution of the xlink.onLoad attributes in the manifest file </p>\n     * @param {Object} mpd - the manifest\n     */\n    function resolveManifestOnLoad(mpd) {\n        let elements;\n        // First resolve all periods, so unnecessary requests inside onLoad Periods with Default content are avoided\n        converter = new X2JS({\n            escapeMode:         false,\n            attributePrefix:    '',\n            arrayAccessForm:    'property',\n            emptyNodeForm:      'object',\n            stripWhitespaces:   false,\n            enableToStringFunc: false,\n            ignoreRoot:         true,\n            matchers:           matchers\n        });\n\n        manifest = mpd;\n\n        if (manifest.Period_asArray) {\n            elements = getElementsToResolve(manifest.Period_asArray, manifest, DashConstants.PERIOD, RESOLVE_TYPE_ONLOAD);\n            resolve(elements, DashConstants.PERIOD, RESOLVE_TYPE_ONLOAD);\n        } else {\n            eventBus.trigger(Events.XLINK_READY, {manifest: manifest});\n        }\n    }\n\n    function reset() {\n        eventBus.off(Events.XLINK_ELEMENT_LOADED, onXlinkElementLoaded, instance);\n\n        if (xlinkLoader) {\n            xlinkLoader.reset();\n            xlinkLoader = null;\n        }\n    }\n\n    function resolve(elements, type, resolveType) {\n        let resolveObject = {};\n        let element,\n            url;\n\n        resolveObject.elements = elements;\n        resolveObject.type = type;\n        resolveObject.resolveType = resolveType;\n        // If nothing to resolve, directly call allElementsLoaded\n        if (resolveObject.elements.length === 0) {\n            onXlinkAllElementsLoaded(resolveObject);\n        }\n        for (let i = 0; i < resolveObject.elements.length; i++) {\n            element = resolveObject.elements[i];\n            if (urlUtils.isHTTPURL(element.url)) {\n                url = element.url;\n            } else {\n                url = element.originalContent.BaseURL + element.url;\n            }\n            xlinkLoader.load(url, element, resolveObject);\n        }\n    }\n\n    function onXlinkElementLoaded(event) {\n        let element,\n            resolveObject;\n\n        const openingTag = '<response>';\n        const closingTag = '</response>';\n        let mergedContent = '';\n\n        element = event.element;\n        resolveObject = event.resolveObject;\n        // if the element resolved into content parse the content\n        if (element.resolvedContent) {\n            let index = 0;\n            // we add a parent elements so the converter is able to parse multiple elements of the same type which are not wrapped inside a container\n            if (element.resolvedContent.indexOf('<?xml') === 0) {\n                index = element.resolvedContent.indexOf('?>') + 2; //find the closing position of the xml declaration, if it exists.\n            }\n            mergedContent = element.resolvedContent.substr(0,index) + openingTag + element.resolvedContent.substr(index) + closingTag;\n            element.resolvedContent = converter.xml_str2json(mergedContent);\n        }\n        if (isResolvingFinished(resolveObject)) {\n            onXlinkAllElementsLoaded(resolveObject);\n        }\n    }\n\n    // We got to wait till all elements of the current queue are resolved before merging back\n    function onXlinkAllElementsLoaded (resolveObject) {\n        let elements = [];\n        let i,\n            obj;\n\n        mergeElementsBack(resolveObject);\n        if (resolveObject.resolveType === RESOLVE_TYPE_ONACTUATE) {\n            eventBus.trigger(Events.XLINK_READY, { manifest: manifest });\n        }\n        if (resolveObject.resolveType === RESOLVE_TYPE_ONLOAD) {\n            switch (resolveObject.type) {\n                // Start resolving the other elements. We can do Adaptation Set and EventStream in parallel\n                case DashConstants.PERIOD:\n                    for (i = 0; i < manifest[DashConstants.PERIOD + '_asArray'].length; i++) {\n                        obj = manifest[DashConstants.PERIOD + '_asArray'][i];\n                        if (obj.hasOwnProperty(DashConstants.ADAPTATION_SET + '_asArray')) {\n                            elements = elements.concat(getElementsToResolve(obj[DashConstants.ADAPTATION_SET + '_asArray'], obj, DashConstants.ADAPTATION_SET, RESOLVE_TYPE_ONLOAD));\n                        }\n                        if (obj.hasOwnProperty(DashConstants.EVENT_STREAM + '_asArray')) {\n                            elements = elements.concat(getElementsToResolve(obj[DashConstants.EVENT_STREAM + '_asArray'], obj, DashConstants.EVENT_STREAM, RESOLVE_TYPE_ONLOAD));\n                        }\n                    }\n                    resolve(elements, DashConstants.ADAPTATION_SET, RESOLVE_TYPE_ONLOAD);\n                    break;\n                case DashConstants.ADAPTATION_SET:\n                    // TODO: Resolve SegmentList here\n                    eventBus.trigger(Events.XLINK_READY, { manifest: manifest });\n                    break;\n            }\n        }\n    }\n\n    // Returns the elements with the specific resolve Type\n    function getElementsToResolve(elements, parentElement, type, resolveType) {\n        let toResolve = [];\n        let element,\n            i,\n            xlinkObject;\n        // first remove all the resolve-to-zero elements\n        for (i = elements.length - 1; i >= 0; i--) {\n            element = elements[i];\n            if (element.hasOwnProperty('xlink:href') && element['xlink:href'] === RESOLVE_TO_ZERO) {\n                elements.splice(i, 1);\n            }\n        }\n        // now get the elements with the right resolve type\n        for (i = 0; i < elements.length; i++) {\n            element = elements[i];\n            if (element.hasOwnProperty('xlink:href') && element.hasOwnProperty('xlink:actuate') && element['xlink:actuate'] === resolveType) {\n                xlinkObject = createXlinkObject(element['xlink:href'], parentElement, type, i, resolveType, element);\n                toResolve.push(xlinkObject);\n            }\n        }\n        return toResolve;\n    }\n\n    function mergeElementsBack(resolveObject) {\n        let resolvedElements = [];\n        let element,\n            type,\n            obj,\n            i,\n            j,\n            k;\n        // Start merging back from the end because of index shifting. Note that the elements with the same parent have to be ordered by index ascending\n        for (i = resolveObject.elements.length - 1; i >= 0; i --) {\n            element = resolveObject.elements[i];\n            type = element.type + '_asArray';\n\n            // Element couldn't be resolved or is TODO Inappropriate target: Remove all Xlink attributes\n            if (!element.resolvedContent || isInappropriateTarget()) {\n                delete element.originalContent['xlink:actuate'];\n                delete element.originalContent['xlink:href'];\n                resolvedElements.push(element.originalContent);\n            }\n            // Element was successfully resolved\n            else if (element.resolvedContent) {\n                for (j = 0; j < element.resolvedContent[type].length; j++) {\n                    //TODO Contains another Xlink attribute with xlink:actuate set to onload. Remove all xLink attributes\n                    obj = element.resolvedContent[type][j];\n                    resolvedElements.push(obj);\n                }\n            }\n            // Replace the old elements in the parent with the resolved ones\n            element.parentElement[type].splice(element.index, 1);\n            for (k = 0; k < resolvedElements.length; k++) {\n                element.parentElement[type].splice(element.index + k, 0, resolvedElements[k]);\n            }\n            resolvedElements = [];\n        }\n        if (resolveObject.elements.length > 0) {\n            iron.run(manifest);\n        }\n    }\n\n    function createXlinkObject(url, parentElement, type, index, resolveType, originalContent) {\n        return {\n            url: url,\n            parentElement: parentElement,\n            type: type,\n            index: index,\n            resolveType: resolveType,\n            originalContent: originalContent,\n            resolvedContent: null,\n            resolved: false\n        };\n    }\n\n    // Check if all pending requests are finished\n    function isResolvingFinished(elementsToResolve) {\n        let i,\n            obj;\n        for (i = 0; i < elementsToResolve.elements.length; i++) {\n            obj = elementsToResolve.elements[i];\n            if (obj.resolved === false) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // TODO : Do some syntax check here if the target is valid or not\n    function isInappropriateTarget() {\n        return false;\n    }\n\n    instance = {\n        resolveManifestOnLoad: resolveManifestOnLoad,\n        setMatchers: setMatchers,\n        setIron: setIron,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nXlinkController.__dashjs_factory_name = 'XlinkController';\nexport default FactoryMaker.getClassFactory(XlinkController);\n"]}