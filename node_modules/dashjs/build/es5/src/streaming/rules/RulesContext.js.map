{"version":3,"sources":["../../../../../src/streaming/rules/RulesContext.js"],"names":["RulesContext","config","instance","abrController","switchHistory","droppedFramesHistory","currentRequest","bufferOccupancyABR","useBufferOccupancyABR","l2AABR","useL2AABR","loLP","useLoLPABR","scheduleController","streamProcessor","getScheduleController","representationInfo","getRepresentationInfo","videoModel","getMediaType","mediaInfo","getMediaInfo","type","getStreamInfo","streamInfo","getAbrController","getSwitchHistory","getVideoModel","getDroppedFramesHistory","getCurrentRequest","__dashjs_factory_name","FactoryMaker","getClassFactory"],"mappings":"sEA+BA,qD,4IAEA,QAASA,aAAT,CAAsBC,MAAtB,CAA8B,CAE1BA,OAASA,QAAU,EAAnB,CACA,GAAIC,gBAAJ,CACA,GAAMC,eAAgBF,OAAOE,aAA7B,CACA,GAAMC,eAAgBH,OAAOG,aAA7B,CACA,GAAMC,sBAAuBJ,OAAOI,oBAApC,CACA,GAAMC,gBAAiBL,OAAOK,cAA9B,CACA,GAAMC,oBAAqBN,OAAOO,qBAAlC,CACA,GAAMC,QAASR,OAAOS,SAAtB,CACA,GAAMC,MAAOV,OAAOW,UAApB,CACA,GAAMC,oBAAqBZ,OAAOa,eAAP,CAAyBb,OAAOa,eAAP,CAAuBC,qBAAvB,EAAzB,CAA0E,IAArG,CACA,GAAMC,oBAAqBf,OAAOa,eAAP,CAAyBb,OAAOa,eAAP,CAAuBG,qBAAvB,EAAzB,CAA0E,IAArG,CACA,GAAMC,YAAajB,OAAOiB,UAAP,CAAoBjB,OAAOiB,UAA3B,CAAwC,IAA3D,CAEA,QAASC,aAAT,EAAwB,CACpB,GAAMC,WAAYC,cAAlB,CACA,MAAOD,WAAYA,UAAUE,IAAtB,CAA6B,IAApC,CACH,CAED,QAASC,cAAT,EAAyB,CACrB,GAAMH,WAAYC,cAAlB,CACA,MAAOD,WAAYA,UAAUI,UAAtB,CAAmC,IAA1C,CACH,CAED,QAASH,aAAT,EAAwB,CACpB,MAAOL,oBAAqBA,mBAAmBI,SAAxC,CAAoD,IAA3D,CACH,CAED,QAASH,sBAAT,EAAiC,CAC7B,MAAOD,mBAAP,CACH,CAED,QAASD,sBAAT,EAAiC,CAC7B,MAAOF,mBAAP,CACH,CAED,QAASY,iBAAT,EAA4B,CACxB,MAAOtB,cAAP,CACH,CAED,QAASuB,iBAAT,EAA4B,CACxB,MAAOtB,cAAP,CACH,CAED,QAASuB,cAAT,EAAyB,CACrB,MAAOT,WAAP,CACH,CAED,QAASU,wBAAT,EAAmC,CAC/B,MAAOvB,qBAAP,CACH,CAED,QAASwB,kBAAT,EAA6B,CACzB,MAAOvB,eAAP,CACH,CAED,QAASE,sBAAT,EAAiC,CAC7B,MAAOD,mBAAP,CACH,CACD,QAASG,UAAT,EAAqB,CACjB,MAAOD,OAAP,CACH,CAED,QAASG,WAAT,EAAsB,CAClB,MAAOD,KAAP,CACH,CAEDT,SAAW,CACPiB,yBADO,CAEPE,yBAFO,CAGPO,+CAHO,CAIPC,mCAJO,CAKPH,iCALO,CAMPH,2BANO,CAOPR,2CAPO,CAQPU,iCARO,CASPR,2CATO,CAUPT,2CAVO,CAWPE,mBAXO,CAYPE,qBAZO,CAaPe,2BAbO,CAAX,CAgBA,MAAOzB,SAAP,CACH,CAtHD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwHAF,aAAa8B,qBAAb,CAAqC,cAArC,C,gBACeC,uBAAaC,eAAb,CAA6BhC,YAA7B,C","file":"RulesContext.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction RulesContext(config) {\n\n    config = config || {};\n    let instance;\n    const abrController = config.abrController;\n    const switchHistory = config.switchHistory;\n    const droppedFramesHistory = config.droppedFramesHistory;\n    const currentRequest = config.currentRequest;\n    const bufferOccupancyABR = config.useBufferOccupancyABR;\n    const l2AABR = config.useL2AABR;\n    const loLP = config.useLoLPABR;\n    const scheduleController = config.streamProcessor ? config.streamProcessor.getScheduleController() : null;\n    const representationInfo = config.streamProcessor ? config.streamProcessor.getRepresentationInfo() : null;\n    const videoModel = config.videoModel ? config.videoModel : null;\n\n    function getMediaType() {\n        const mediaInfo = getMediaInfo();\n        return mediaInfo ? mediaInfo.type : null;\n    }\n\n    function getStreamInfo() {\n        const mediaInfo = getMediaInfo();\n        return mediaInfo ? mediaInfo.streamInfo : null;\n    }\n\n    function getMediaInfo() {\n        return representationInfo ? representationInfo.mediaInfo : null;\n    }\n\n    function getRepresentationInfo() {\n        return representationInfo;\n    }\n\n    function getScheduleController() {\n        return scheduleController;\n    }\n\n    function getAbrController() {\n        return abrController;\n    }\n\n    function getSwitchHistory() {\n        return switchHistory;\n    }\n\n    function getVideoModel() {\n        return videoModel;\n    }\n\n    function getDroppedFramesHistory() {\n        return droppedFramesHistory;\n    }\n\n    function getCurrentRequest() {\n        return currentRequest;\n    }\n\n    function useBufferOccupancyABR() {\n        return bufferOccupancyABR;\n    }\n    function useL2AABR() {\n        return l2AABR;\n    }\n\n    function useLoLPABR() {\n        return loLP;\n    }\n\n    instance = {\n        getMediaType,\n        getMediaInfo,\n        getDroppedFramesHistory,\n        getCurrentRequest,\n        getSwitchHistory,\n        getStreamInfo,\n        getScheduleController,\n        getAbrController,\n        getRepresentationInfo,\n        useBufferOccupancyABR,\n        useL2AABR,\n        useLoLPABR,\n        getVideoModel\n    };\n\n    return instance;\n}\n\nRulesContext.__dashjs_factory_name = 'RulesContext';\nexport default FactoryMaker.getClassFactory(RulesContext);\n"]}